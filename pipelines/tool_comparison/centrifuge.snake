#!/usr/bin/env python
# Kraken Snakemake

import os
import glob

FILES = glob.glob('*.?.fastq.gz')

#remove .fastq.gz from files to make handling easier
extless_files = []
FILES.sort()
for file in FILES:
    extless_files.append(file[:-9])

#set forward & reverse read files, shouldn't matter if it doesn't match up completely
R1 = extless_files[0]
R2 = extless_files[1]

#check reads are paired end by checking filenames are the same without .1 or .2 paired end information
if (extless_files[0])[:-2] != (extless_files[1])[:-2]:
    raise Exception("%s and %s don't appear to be paired end reads based on filename" % (R1,R2))

#set overall filename R0 after checking that they match above
R0 = (extless_files[0])[:-2]

# Obtain First Three Letters to use for file handlingj (well, all before the first _ )
FTL = R0.split('_')[0]

# Set output directory
outdir = '/gpfs/afm/cancergenetics/Abe/tool_comparison_output/centrifuge/'

# Set Kraken database directory
centrifuge_db = '~/programs/centrifuge/indices/p+h+v'

rule all:
    input: ("filesdone/%s" %FTL)

rule move_stuff:
    input: in1=("%s_single.cent" %FTL), in2=("%s_paired.cent" %FTL), in3=("%s_single_full.cent" %FTL), in4=("%s_paired_full.cent" %FTL)
    output: final=("filesdone/%s" %FTL)
    threads: 1
    params: cluster="-R 'rusage[mem=1000]' -M 1000 -o log", queue="short-eth"
    shell: "mv {input.in1} {input.in2} {input.in3} {input.in4} {outdir}; touch {output.final}"

rule single_cent:
    input: ("%s_bear_unmapped.0.fastq.gz" %FTL)
    output: single=("%s_single.cent" %FTL), single_full=("%s_single_full.cent" %FTL)
    threads: 10
    params: cluster="-R 'rusage[mem=60000]' -M 60000 -o single_log", queue="short-ib"
    shell: 'zcat {input} | centrifuge -x {centrifuge_db} -U - -S {output.single_full} --report-file {output.single}'

rule paired_cent:
    input: i1=("%s_bear_unmapped.1.fastq.gz" %FTL), i2=("%s_bear_unmapped.2.fastq.gz" %FTL)
    output: paired=("%s_paired.cent" %FTL), paired_full=("%s_paired_full.cent" %FTL)
    threads: 10
    params: cluster="-R 'rusage[mem=60000]' -M 60000 -o paired_log", queue="short-ib"
    shell: 'centrifuge -x {centrifuge_db} -1 {input.i1} -2 {input.i2} --report-file {output.paired} -S {output.paired_full}'
