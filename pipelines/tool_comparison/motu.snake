#!/usr/bin/env python
# Kraken Snakemake

import os
import glob

FILES = glob.glob('*.?.fastq.gz')

#remove .fastq.gz from files to make handling easier
extless_files = []
FILES.sort()
for file in FILES:
    extless_files.append(file[:-9])

#set forward & reverse read files, shouldn't matter if it doesn't match up completely
R1 = extless_files[0]
R2 = extless_files[1]

#check reads are paired end by checking filenames are the same without .1 or .2 paired end information
if (extless_files[0])[:-2] != (extless_files[1])[:-2]:
    raise Exception("%s and %s don't appear to be paired end reads based on filename" % (R1,R2))

#set overall filename R0 after checking that they match above
R0 = (extless_files[0])[:-2]

# Obtain First Three Letters to use for file handlingj (well, all before the first _ )
FTL = R0.split('_')[0]

# Set output directory
outdir = '/gpfs/afm/cancergenetics/Abe/tool_comparison_output/motu/genus_output'

# Set Kraken database directory
#centrifuge_db = '~/programs/centrifuge/indices/p+h+v'

rule all:
    input: ("filesdone/%s" %FTL)

rule motu:
    input: i1=("%s_bear_unmapped.1.fastq.gz" %FTL), i2=("%s_bear_unmapped.2.fastq.gz" %FTL), i3=("%s_bear_unmapped.0.fastq.gz" %FTL)
    output: out1=("filesdone/%s" %FTL), out2=("genus_output/%s_genus.motus" %FTL)
    threads: 10
    params: cluster="-R 'rusage[mem=60000]' -M 60000 -o motu_log", queue="short-ib"
    shell: 'motus profile -f {input.i1} -r {input.i2} -s {input.i3} -t 5 -k genus -o {output.out2}; touch {output.out1}'
